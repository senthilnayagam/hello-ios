Hello App — Feature Ideas (beginner-friendly)

How to use: Pick a few items, mark them with [x], and add any notes below the item.

1) [x] Personalized greeting
   - Show a TextField for name and display "Hello, <name>!" under it.
   - Difficulty: Easy | Files: hello/ContentView.swift
   - Done when: Greeting updates live as the user types. (Implemented: TextField + live Text("Hello, <name>!") when name not empty.)

2) [ ] Live clock label
   - Show a label that updates every second with the current time (Timer.publish).
   - Difficulty: Easy–Med | Files: hello/ContentView.swift
   - Done when: Time ticks every second without tapping a button.

3) [ ] Date picker + formatted output
   - Add a DatePicker and show selected date/time using DateFormatter.
   - Difficulty: Easy | Files: hello/ContentView.swift
   - Done when: Changing the picker updates a formatted text below it.

4) [x] Persist dark mode choice
   - Save the dark/light toggle using @AppStorage("isDarkMode").
   - Difficulty: Easy | Files: hello/helloApp.swift, hello/ContentView.swift
   - Done when: App remembers theme across launches. (Implemented: @AppStorage("isDarkMode") in helloApp.swift; ContentView binds to it.)

5) [ ] Accent color picker
   - Let users choose an accent color (ColorPicker) and save it with @AppStorage.
   - Difficulty: Med | Files: hello/ContentView.swift
   - Done when: Buttons/tint use the saved accent color.

6) [ ] Tab-based navigation
   - Convert main layout to TabView with Home, Settings, About tabs.
   - Difficulty: Med | Files: hello/ContentView.swift (+ new SwiftUI files optional)
   - Done when: You can switch tabs and each has its own content.

7) [ ] Simple notes list
   - A List with add/delete (swipe to delete) of short text notes (in-memory).
   - Difficulty: Med | Files: hello/ContentView.swift
   - Done when: You can add and remove notes; state persists while app is open.

8) [x] Save username with @AppStorage
   - Persist the text from the name field to UserDefaults via @AppStorage.
   - Difficulty: Easy | Files: hello/ContentView.swift
   - Done when: Name pre-fills on next app launch. (Implemented: @AppStorage("username") backing the TextField.)

9) [ ] Share current time
   - Add a ShareLink to share the current time text.
   - Difficulty: Easy | Files: hello/ContentView.swift
   - Done when: System share sheet appears and shares the time.

10) [ ] Haptic feedback (iOS)
   - Trigger light impact when tapping Show Time or theme toggle (UIImpactFeedbackGenerator).
   - Difficulty: Med | Files: hello/ContentView.swift
   - Done when: You feel a tap/vibration on supported devices.

11) [ ] About screen
   - New view showing app name, version, build number, and a short description.
   - Difficulty: Easy | Files: hello/ContentView.swift (or new AboutView.swift)
   - Done when: Accessible via a button or an About tab.

12) [ ] Accessibility pass
   - Add accessibilityLabel/hint to buttons; ensure Dynamic Type scales well.
   - Difficulty: Easy | Files: hello/ContentView.swift
   - Done when: VoiceOver reads controls meaningfully and text scales correctly.

13) [ ] Localize strings
   - Move user-facing text to a String Catalog (English + one more language).
   - Difficulty: Med | Files: String Catalog + replace hardcoded strings
   - Done when: App shows translated text when device language changes.

14) [ ] Preview variants
   - Add SwiftUI previews for light/dark modes and large text sizes.
   - Difficulty: Easy | Files: hello/ContentView.swift
   - Done when: Multiple preview modifiers demonstrate different appearances.

Notes:
- Your App Icon is set via Assets.xcassets/AppIcon. Replace the dark/tinted variants later if desired.
- For iOS, avoid force-quit; the Exit button behavior is best limited to macOS.
